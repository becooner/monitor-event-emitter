const e=e=>Object.prototype.toString.call(e).slice(8,-1),t=t=>"String"===e(t),s=t=>"Object"===e(t);class n{constructor(e){this.maxEvents=(null==e?void 0:e.maxEvents)?e.maxEvents:null,this.scope=(null==e?void 0:e.scope)||"EventEmitter",this.debug=(null==e?void 0:e.debug)||!1,this.events=new Map,this.eventEmitterWatcher=new Map}get eventKeys(){return this.events.keys()}get countOfEvents(){return this.events.size}get countOfAllHandlers(){let e=0;for(const t of this.events.values())e+=t.length;return e}countOfEventHandlers(e){if(!t(e))return console.log("param event show be string"),0;const s=this.events.get(e);return s?s.length:(console.log(`The number of handlers with event name ${e} is 0`),0)}countOfTypeHandlers(e){if(!t(e))return console.log("param type should be string"),0;let s=[];for(const e of this.events.values())s=[...s,...e];return s.filter((t=>t.type===e)).length}on(n,r,i){return t(n)||s(n)?t(n)?"Function"===e(r)||(t=>"AsyncFunction"===e(t))(r)?this._registerListener(n,r,i):(console.log("param handler should provided"),this):s(n)?this._registerListeners(n):void 0:(console.log("param event should provided with type string or object"),this)}_registerEvent(t,s,n){const{events:r}=this,i="Number"===e(n)&&n>=0;const[o,l=""]=t.split(".");if(!o)return console.log("when you're ready to register an event handler, it's best to provide an event name"),this;if(r.has(o)||r.set(o,[]),i){r.get(o).splice(n,0,{type:l,handler:s,id:this._uuid()})}else{r.get(o).push({type:l,handler:s,id:this._uuid()})}return this}_registerListener(e,t,s){return e.split(" ").forEach((e=>{this._registerEvent(e,t,s)})),this}_registerListeners(e){return Object.keys(e).forEach((t=>{const s=e[t],{handler:n,order:r}=s;t.split(" ").forEach((e=>{this._registerEvent(e,n,r)}))})),this}emit(e,...t){if(!/^[A-Za-z][A-Za-z.]+(\s{1}[A-Za-z.]+)*/g.test(e))return console.log("param event show be string,such as 'download.pic' or 'download.pic pay' or 'download.pic pay.privilege'"),this;if(!this.events.size)return console.log("no events are registered in the event center"),this;const s=e.split(" ");for(const e of s)this._emit(e,...t);return this}offAll(){return this.events.clear()}off(e){if(!/^[A-Za-z][A-Za-z.]+(\s{1}[A-Za-z.]+)*/g.test(e))return console.log("param event show be string,such as 'download.pic' or 'download.pic pay' or 'download.pic pay.privilege'"),this;const t=e.split(" ");for(const e of t){const[t,s=""]=e.split(".");this._off(t,s)}return this}_off(e,t){if(e&&t){const s=this.events.get(e)||[],n=s.findIndex((e=>e.type===t));n>=0&&s.splice(n,1)}else this.events.has(e)&&this.events.delete(e);return this._deleteInvalidEvent(),this}offType(e){if(!t(e))return console.log("param type should be string"),this;for(const t of this.eventKeys){const s=this.events.get(t)||[],n=s.findIndex((t=>t.type===e));n>=0&&s.splice(n,1)}return this._deleteInvalidEvent(),this}_deleteInvalidEvent(){for(const e of this.eventKeys){0===(this.events.get(e)||[]).length&&this.events.delete(e)}}emitType(e,...s){if(!t(e))return console.log("请输入字符串格式的事件类型"),this;let n=[];for(const[t,s]of this.events.entries()){const[r]=s.filter((t=>t.type===e));if(r){const{id:e,type:s,handler:i}=r;n=[...n,{id:e,type:s,handler:i,eventName:t}]}}for(const{handler:e,id:t,type:r,eventName:i}of n){const n=e(...s);this._setWatcher(i,r,t,n,...s)}return this}_emit(e,...t){const[s,n=""]=e.split("."),r=this._matchHandlers(s,n);for(const{handler:e,id:s,type:n,eventName:i}of r){const r=e(...t);this._setWatcher(i,n,s,r,...t)}}_matchHandlers(e,t){const s=this.events.get(e)||[];return t?s.filter((e=>e.type===t)).map((t=>{const{handler:s,id:n,type:r}=t;return{handler:s,id:n,type:r,eventName:e}})):s.map((t=>{const{handler:s,id:n,type:r}=t;return{handler:s,id:n,type:r,eventName:e}}))}_uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}_setWatcher(e,t,s,n,...r){t||(t="global");const i=`${e}-${t}-${s}`;if(this.eventEmitterWatcher.has(i)){const e=this.eventEmitterWatcher.get(i).count,t=this.eventEmitterWatcher.get(i).details;this.eventEmitterWatcher.set(i,{count:e+1,details:[...t,{result:n,time:new Date,args:r}]})}else this.eventEmitterWatcher.set(i,{count:1,details:[{result:n,time:new Date,args:r}]})}watch(){return this.eventEmitterWatcher}}n.version="v0.0.1";export default n;"undefined"!=typeof window&&(window._PrettyEventEmitter_VERSION_="1.0.0");
